// generated by codegen, do not edit
import codeql.rust.elements
import TestUtils

query predicate instances(
  LetExpr x, string getNumberOfAttrs__label, int getNumberOfAttrs, string hasScrutinee__label,
  string hasScrutinee, string hasPat__label, string hasPat
) {
  toBeTested(x) and
  not x.isUnknown() and
  getNumberOfAttrs__label = "getNumberOfAttrs:" and
  getNumberOfAttrs = x.getNumberOfAttrs() and
  hasScrutinee__label = "hasScrutinee:" and
  (if x.hasScrutinee() then hasScrutinee = "yes" else hasScrutinee = "no") and
  hasPat__label = "hasPat:" and
  if x.hasPat() then hasPat = "yes" else hasPat = "no"
}

query predicate getAttr(LetExpr x, int index, Attr getAttr) {
  toBeTested(x) and not x.isUnknown() and getAttr = x.getAttr(index)
}

query predicate getScrutinee(LetExpr x, Expr getScrutinee) {
  toBeTested(x) and not x.isUnknown() and getScrutinee = x.getScrutinee()
}

query predicate getPat(LetExpr x, Pat getPat) {
  toBeTested(x) and not x.isUnknown() and getPat = x.getPat()
}
