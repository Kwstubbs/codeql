// generated by codegen, do not edit
import codeql.rust.elements
import TestUtils

query predicate instances(
  TupleField x, string getNumberOfAttrs__label, int getNumberOfAttrs, string hasTypeRepr__label,
  string hasTypeRepr, string hasVisibility__label, string hasVisibility
) {
  toBeTested(x) and
  not x.isUnknown() and
  getNumberOfAttrs__label = "getNumberOfAttrs:" and
  getNumberOfAttrs = x.getNumberOfAttrs() and
  hasTypeRepr__label = "hasTypeRepr:" and
  (if x.hasTypeRepr() then hasTypeRepr = "yes" else hasTypeRepr = "no") and
  hasVisibility__label = "hasVisibility:" and
  if x.hasVisibility() then hasVisibility = "yes" else hasVisibility = "no"
}

query predicate getAttr(TupleField x, int index, Attr getAttr) {
  toBeTested(x) and not x.isUnknown() and getAttr = x.getAttr(index)
}

query predicate getTypeRepr(TupleField x, TypeRepr getTypeRepr) {
  toBeTested(x) and not x.isUnknown() and getTypeRepr = x.getTypeRepr()
}

query predicate getVisibility(TupleField x, Visibility getVisibility) {
  toBeTested(x) and not x.isUnknown() and getVisibility = x.getVisibility()
}
