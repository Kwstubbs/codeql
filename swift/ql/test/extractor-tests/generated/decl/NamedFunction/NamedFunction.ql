// generated by codegen/codegen.py, do not edit
import codeql.swift.elements
import TestUtils

query predicate instances(
  NamedFunction x, string hasName__label, string hasName, string hasSelfParam__label,
  string hasSelfParam, string getNumberOfParams__label, int getNumberOfParams,
  string hasBody__label, string hasBody, string getNumberOfCaptures__label, int getNumberOfCaptures,
  string getNumberOfGenericTypeParams__label, int getNumberOfGenericTypeParams,
  string getModule__label, ModuleDecl getModule, string getNumberOfMembers__label,
  int getNumberOfMembers, string getInterfaceType__label, Type getInterfaceType
) {
  toBeTested(x) and
  not x.isUnknown() and
  hasName__label = "hasName:" and
  (if x.hasName() then hasName = "yes" else hasName = "no") and
  hasSelfParam__label = "hasSelfParam:" and
  (if x.hasSelfParam() then hasSelfParam = "yes" else hasSelfParam = "no") and
  getNumberOfParams__label = "getNumberOfParams:" and
  getNumberOfParams = x.getNumberOfParams() and
  hasBody__label = "hasBody:" and
  (if x.hasBody() then hasBody = "yes" else hasBody = "no") and
  getNumberOfCaptures__label = "getNumberOfCaptures:" and
  getNumberOfCaptures = x.getNumberOfCaptures() and
  getNumberOfGenericTypeParams__label = "getNumberOfGenericTypeParams:" and
  getNumberOfGenericTypeParams = x.getNumberOfGenericTypeParams() and
  getModule__label = "getModule:" and
  getModule = x.getModule() and
  getNumberOfMembers__label = "getNumberOfMembers:" and
  getNumberOfMembers = x.getNumberOfMembers() and
  getInterfaceType__label = "getInterfaceType:" and
  getInterfaceType = x.getInterfaceType()
}

query predicate getName(NamedFunction x, string getName) {
  toBeTested(x) and not x.isUnknown() and getName = x.getName()
}

query predicate getSelfParam(NamedFunction x, ParamDecl getSelfParam) {
  toBeTested(x) and not x.isUnknown() and getSelfParam = x.getSelfParam()
}

query predicate getParam(NamedFunction x, int index, ParamDecl getParam) {
  toBeTested(x) and not x.isUnknown() and getParam = x.getParam(index)
}

query predicate getBody(NamedFunction x, BraceStmt getBody) {
  toBeTested(x) and not x.isUnknown() and getBody = x.getBody()
}

query predicate getCapture(NamedFunction x, int index, CapturedDecl getCapture) {
  toBeTested(x) and not x.isUnknown() and getCapture = x.getCapture(index)
}

query predicate getGenericTypeParam(
  NamedFunction x, int index, GenericTypeParamDecl getGenericTypeParam
) {
  toBeTested(x) and not x.isUnknown() and getGenericTypeParam = x.getGenericTypeParam(index)
}

query predicate getMember(NamedFunction x, int index, Decl getMember) {
  toBeTested(x) and not x.isUnknown() and getMember = x.getMember(index)
}
